version: '3'

services:
  postgres_db:
    image: postgres:13
    container_name: "${DB_DBNAME}_db"
    build: ./custom-postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./custom-postgres/custom_postgresql.conf:/etc/postgresql.conf
    command: postgres -c config_file=/etc/postgresql.conf
    environment:
      - POSTGRES_DB=${DB_DBNAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    env_file:
      - .env

  api_py:
    container_name: "${DB_DBNAME}_fastapi"
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "5050:5050"
    depends_on:
      - postgres_db
    command: 'bash -c "cd ${APP_FOLDER} && alembic upgrade head && uvicorn api.main:app --host 0.0.0.0 --port=5050 --reload"'
    volumes:
      - /${APP_FOLDER}
      - ./alembic:/${APP_FOLDER}/alembic
      - ./api:/${APP_FOLDER}/api
      - ./tests:/${APP_FOLDER}/tests
    env_file:
      - .env

  worker:
    container_name: "${DB_DBNAME}_worker"
    build: .
    command: bash -c "cd ${APP_FOLDER} && celery -A api.celery_worker.celery worker -l info"
    volumes:
      - .:/${APP_FOLDER}
    env_file:
      - .env
    environment:
      - 'CELERY_BROKER_URL=redis://redis:6379/1'
      - 'CELERY_RESULT_BACKEND=redis://redis:6379/1'
    depends_on:
      - api_py
      - redis
      - worker-beat

  # # # # # # # # # #
  worker-beat:
    container_name: "${DB_DBNAME}_worker_beat"
    build: .
    command: bash -c "cd ${APP_FOLDER} && celery -A api.celery_worker.celery beat -l info"
    volumes:
      - .:/${APP_FOLDER}
    env_file:
      - .env
    environment:
      - DEBUG=1
      - 'CELERY_BROKER_URL=redis://redis:6379/1'
      - 'CELERY_RESULT_BACKEND=redis://redis:6379/1'
    depends_on:
      - api_py
      - redis
  # # # # # # # # # #

  redis:
    container_name: "${DB_DBNAME}_redis"
    image: 'redis:6-alpine'
    env_file:
      - .env
    ports:
      - '6379:6379'

  flower:
    container_name: "${DB_DBNAME}_flower"
    build: .
    command: 'bash -c "cd ${APP_FOLDER} && celery -A api.celery_worker.celery flower --port=5555 --broker=redis://redis:6379/1"'
    ports:
      - '5556:5555'
    env_file:
      - .env
    environment:
      - 'CELERY_BROKER_URL=redis://redis:6379/1'
      - 'CELERY_RESULT_BACKEND=redis://redis:6379/1'
    depends_on:
      - api_py
      - redis
      - worker

volumes:
  pgdata: null
  flower: null
  worker: null
